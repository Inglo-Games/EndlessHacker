[gd_scene load_steps=13 format=2]

[ext_resource path="res://scenes/blocks/block_template.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/materials/particles_down.tres" type="Material" id=2]
[ext_resource path="res://scripts/block_obstacle.gd" type="Script" id=3]
[ext_resource path="res://assets/materials/obstacle0.tres" type="Material" id=4]
[ext_resource path="res://assets/sprites/1.png" type="Texture" id=5]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 2, 0.05, 2 )

[sub_resource type="ConcavePolygonShape" id=2]
data = PoolVector3Array( -1, 0.025, 1, 1, 0.025, 1, -1, -0.025, 1, 1, 0.025, 1, 1, -0.025, 1, -1, -0.025, 1, 1, 0.025, -1, -1, 0.025, -1, 1, -0.025, -1, -1, 0.025, -1, -1, -0.025, -1, 1, -0.025, -1, 1, 0.025, 1, 1, 0.025, -1, 1, -0.025, 1, 1, 0.025, -1, 1, -0.025, -1, 1, -0.025, 1, -1, 0.025, -1, -1, 0.025, 1, -1, -0.025, -1, -1, 0.025, 1, -1, -0.025, 1, -1, -0.025, -1, 1, 0.025, 1, -1, 0.025, 1, 1, 0.025, -1, -1, 0.025, 1, -1, 0.025, -1, 1, 0.025, -1, -1, -0.025, 1, 1, -0.025, 1, -1, -0.025, -1, 1, -0.025, 1, 1, -0.025, -1, -1, -0.025, -1 )

[sub_resource type="QuadMesh" id=3]
material = ExtResource( 4 )
size = Vector2( 0.4, 0.4 )

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA = albedo.a * albedo_tex.a;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/albedo = Color( 0.898039, 0, 0, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 0.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 5 )

[sub_resource type="QuadMesh" id=6]
material = SubResource( 5 )
size = Vector2( 0.4, 0.4 )

[sub_resource type="BoxShape" id=7]

[node name="platform" instance=ExtResource( 1 )]
script = ExtResource( 3 )

[node name="top_mesh" type="MeshInstance" parent="." index="1"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3, 0 )
mesh = SubResource( 1 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="top_mesh" index="0"]
collision_layer = 2
collision_mask = 0

[node name="CollisionShape" type="CollisionShape" parent="top_mesh/StaticBody" index="0"]
shape = SubResource( 2 )

[node name="particles0" type="Particles" parent="." index="2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.8, 0 )
amount = 24
lifetime = 0.6
visibility_aabb = AABB( -1, -3, -1, 6, 3, 2 )
process_material = ExtResource( 2 )
draw_pass_1 = SubResource( 3 )

[node name="particles1" type="Particles" parent="." index="3"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.8, 0 )
amount = 24
lifetime = 0.6
visibility_aabb = AABB( -1, -3, -1, 6, 3, 2 )
process_material = ExtResource( 2 )
draw_pass_1 = SubResource( 6 )

[node name="player_collide_area" type="Area" parent="." index="4"]

[node name="CollisionShape" type="CollisionShape" parent="player_collide_area" index="0"]
transform = Transform( 1, 0, 0, 0, 0.8, 0, 0, 0, 1, 0, 2.4, 0 )
shape = SubResource( 7 )
